{"ast":null,"code":"import { ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY } from \"./action-types/cart-actions\";\nexport const addToCart = addedItems => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const firebase = getFirebase();\n    const profile = getState().firebase.profile;\n    const userId = getState().firebase.auth.uid;\n    const checkIfExisted = getState().firestore.carts.addedItems;\n    let state = getState(); // let docId = firestore.ordered.carts.id;\n\n    console.log(\"cartActions: add to cart\");\n    console.log(state);\n    let path = state.firestore.data.carts;\n    console.log(\"path\", path);\n    let itemToAdd = state.cart.items.find(item => item.id === addedItems.id);\n    console.log(itemToAdd);\n\n    if (itemToAdd !== {}) {\n      addedItems.quantity = 1;\n      firestore.collection('carts').add({\n        addedItems,\n        customerFirstName: profile.firstName,\n        customerLastName: profile.lastName,\n        customerId: userId,\n        shoppedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      });\n    } else {\n      addedItems.quantity += 1;\n      firestore.collection('carts').doc().update({\n        addedItems,\n        updatedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      }); // return {\n      //     ...state,\n      //     total: state.total + addedItems.price\n      // }\n    }\n\n    console.log('state', state);\n  };\n};\nexport const removeItem = id => {\n  // console.log(\"removedItem\");\n  // console.log(removedItem);\n  // const id = removedItem.id.toString();\n  // const cartsId = document.id;\n  console.log(\"dispatch\", id);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').doc(id).delete().then(() => {\n      console.log(\"deleted\");\n      dispatch({\n        type: REMOVE_ITEM,\n        id\n      });\n    }).catch(err => {\n      console.log('delete failed');\n      dispatch({\n        type: \"REMOVE_ITEM_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const addQuantity = addQuantityItem => {\n  console.log(\"addQuantityItem:\", addQuantityItem);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let cartQuantity = addQuantityItem.quantity;\n    console.log('cart', cartQuantity);\n    firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get().then(snapshot => {\n      // dispatch({type: ADD_QUANTITY, addQuantityItem});\n      snapshot.forEach(doc => {\n        // doc.data().addedItems.quantity = addQuantityItem.quantity;\n        let test = doc.data();\n        let test2 = test.addedItems;\n        console.log(test.addedItems);\n        dispatch({\n          type: ADD_QUANTITY,\n          addedItems: test.addedItems\n        }); // console.log(doc.id, '=>', doc.data());\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const subtractQuantity = subtractQuantityItem => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').delete({\n      customerFirstName: 'Raj',\n      customerLastName: 'Koothrappali',\n      customerId: 12345,\n      shoppedAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: SUB_QUANTITY,\n        subtractQuantityItem\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SUB_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","firebase","profile","userId","auth","uid","checkIfExisted","carts","state","console","log","path","data","itemToAdd","cart","items","find","item","id","quantity","collection","add","customerFirstName","firstName","customerLastName","lastName","customerId","shoppedAt","Date","then","type","catch","err","doc","update","updatedAt","removeItem","delete","addQuantity","addQuantityItem","cartQuantity","where","get","snapshot","forEach","test","test2","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n        return (dispatch, getState, {getFirebase, getFirestore}) => {\n            const firestore = getFirestore();\n            const firebase = getFirebase();\n            const profile = getState().firebase.profile;\n            const userId = getState().firebase.auth.uid;\n            const checkIfExisted = getState().firestore.carts.addedItems\n            let state = getState();\n            // let docId = firestore.ordered.carts.id;\n            console.log(\"cartActions: add to cart\");\n            console.log(state);\n            let path = state.firestore.data.carts;\n            console.log(\"path\", path);\n            let itemToAdd = state.cart.items.find(item => item.id === addedItems.id);\n            console.log(itemToAdd);\n            if (itemToAdd !== {}) {\n                addedItems.quantity = 1;\n                firestore.collection('carts').add({\n                    addedItems,\n                    customerFirstName: profile.firstName,\n                    customerLastName: profile.lastName,\n                    customerId: userId,\n                    shoppedAt: new Date()\n                }).then(() => {\n                    dispatch({type: ADD_TO_CART, addedItems});\n                }).catch(err => {\n                    dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                });\n            } else {\n                addedItems.quantity += 1;\n                firestore.collection('carts').doc().update({\n                    addedItems,\n                    updatedAt: new Date()\n                }).then(() => {\n                    dispatch({type: ADD_TO_CART, addedItems});\n                }).catch(err => {\n                    dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                });\n                // return {\n                //     ...state,\n                //     total: state.total + addedItems.price\n                // }\n            }\n            console.log('state', state);\n        }\n\n\n};\n\nexport const removeItem = (id) => {\n    // console.log(\"removedItem\");\n    // console.log(removedItem);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    console.log(\"dispatch\", id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').doc(id).delete().then(() => {\n            console.log(\"deleted\");\n            dispatch({type: REMOVE_ITEM, id});\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let cartQuantity = addQuantityItem.quantity;\n        console.log('cart', cartQuantity);\n        firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get(\n            // quantity: ++cartQuantity\n        ).then((snapshot) => {\n            // dispatch({type: ADD_QUANTITY, addQuantityItem});\n            snapshot.forEach((doc => {\n                // doc.data().addedItems.quantity = addQuantityItem.quantity;\n                let test = doc.data();\n                let test2 = test.addedItems;\n                console.log(test.addedItems);\n                dispatch({type: ADD_QUANTITY, addedItems: test.addedItems});\n                // console.log(doc.id, '=>', doc.data());\n            }))\n        }).catch(err => {\n            dispatch({type: \"ADD_QUANTITY_ERROR\", err});\n        })\n    }\n\n};\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').delete({\n\n            customerFirstName: 'Raj',\n            customerLastName: 'Koothrappali',\n            customerId: 12345,\n            shoppedAt: new Date()\n        }).then(() => {\n            dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n        }).catch(err => {\n            dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY } from \"./action-types/cart-actions\";\nexport const addToCart = addedItems => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const userId = getState().firebase.auth.uid;\n    let state = getState();\n    let docId = firestore.ordered.console.log(\"cartActions: add to cart\");\n    console.log(state); // state.cart.total = state.cart.total + addedItems.price;\n\n    let itemToAdd = state.cart.items.find(item => item.id === addedItems.id);\n\n    if (itemToAdd) {\n      addedItems.quantity = 1;\n      firestore.collection('carts').add({\n        addedItems,\n        customerFirstName: profile.firstName,\n        customerLastName: profile.lastName,\n        customerId: userId,\n        shoppedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      });\n    } else {\n      addedItems.quantity += 1;\n      firestore.collection('carts').doc(docID).update({\n        addedItems,\n        updatedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      }); // return {\n      //     ...state,\n      //     total: state.total + addedItems.price\n      // }\n    }\n\n    console.log('state', state);\n  };\n};\nexport const removeItem = id => {\n  // console.log(\"removedItem\");\n  // console.log(removedItem);\n  // const id = removedItem.id.toString();\n  // const cartsId = document.id;\n  console.log(\"dispatch\", id);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').doc(id).delete().then(() => {\n      console.log(\"deleted\");\n      dispatch({\n        type: REMOVE_ITEM,\n        id\n      });\n    }).catch(err => {\n      console.log('delete failed');\n      dispatch({\n        type: \"REMOVE_ITEM_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const addQuantity = addQuantityItem => {\n  console.log(\"addQuantityItem:\", addQuantityItem);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let cartQuantity = addQuantityItem.quantity;\n    console.log('cart', cartQuantity);\n    firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get().then(snapshot => {\n      // dispatch({type: ADD_QUANTITY, addQuantityItem});\n      snapshot.forEach(doc => {\n        // doc.data().addedItems.quantity = addQuantityItem.quantity;\n        let test = doc.data();\n        let test2 = test.addedItems;\n        console.log(test.addedItems);\n        dispatch({\n          type: ADD_QUANTITY,\n          addedItems: test.addedItems\n        }); // console.log(doc.id, '=>', doc.data());\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const subtractQuantity = subtractQuantityItem => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').delete({\n      customerFirstName: 'Raj',\n      customerLastName: 'Koothrappali',\n      customerId: 12345,\n      shoppedAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: SUB_QUANTITY,\n        subtractQuantityItem\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SUB_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","userId","auth","uid","state","docId","ordered","console","log","itemToAdd","cart","items","find","item","id","quantity","collection","add","customerFirstName","firstName","customerLastName","lastName","customerId","shoppedAt","Date","then","type","catch","err","doc","docID","update","updatedAt","removeItem","delete","addQuantity","addQuantityItem","cartQuantity","where","get","snapshot","forEach","test","data","test2","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n        return (dispatch, getState, {getFirebase, getFirestore}) => {\n            const firestore = getFirestore();\n            const profile = getState().firebase.profile;\n            const userId = getState().firebase.auth.uid;\n            let state = getState();\n            let docId = firestore.ordered.\n            console.log(\"cartActions: add to cart\");\n            console.log(state);\n\n            // state.cart.total = state.cart.total + addedItems.price;\n            let itemToAdd = state.cart.items.find(item => item.id === addedItems.id);\n            if (itemToAdd) {\n                addedItems.quantity = 1;\n                firestore.collection('carts').add({\n                    addedItems,\n                    customerFirstName: profile.firstName,\n                    customerLastName: profile.lastName,\n                    customerId: userId,\n                    shoppedAt: new Date()\n                }).then(() => {\n                    dispatch({type: ADD_TO_CART, addedItems});\n                }).catch(err => {\n                    dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                });\n            } else {\n                addedItems.quantity += 1;\n                firestore.collection('carts').doc(docID).update({\n                    addedItems,\n                    updatedAt: new Date()\n                }).then(() => {\n                    dispatch({type: ADD_TO_CART, addedItems});\n                }).catch(err => {\n                    dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                });\n                // return {\n                //     ...state,\n                //     total: state.total + addedItems.price\n                // }\n            }\n            console.log('state', state);\n        }\n\n\n};\n\nexport const removeItem = (id) => {\n    // console.log(\"removedItem\");\n    // console.log(removedItem);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    console.log(\"dispatch\", id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').doc(id).delete().then(() => {\n            console.log(\"deleted\");\n            dispatch({type: REMOVE_ITEM, id});\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let cartQuantity = addQuantityItem.quantity;\n        console.log('cart', cartQuantity);\n        firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get(\n            // quantity: ++cartQuantity\n        ).then((snapshot) => {\n            // dispatch({type: ADD_QUANTITY, addQuantityItem});\n            snapshot.forEach((doc => {\n                // doc.data().addedItems.quantity = addQuantityItem.quantity;\n                let test = doc.data();\n                let test2 = test.addedItems;\n                console.log(test.addedItems);\n                dispatch({type: ADD_QUANTITY, addedItems: test.addedItems});\n                // console.log(doc.id, '=>', doc.data());\n            }))\n        }).catch(err => {\n            dispatch({type: \"ADD_QUANTITY_ERROR\", err});\n        })\n    }\n\n};\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').delete({\n\n            customerFirstName: 'Raj',\n            customerLastName: 'Koothrappali',\n            customerId: 12345,\n            shoppedAt: new Date()\n        }).then(() => {\n            dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n        }).catch(err => {\n            dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
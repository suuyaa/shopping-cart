{"ast":null,"code":"import { ADD_QUANTITY, ADD_QUANTITY_IN_CART, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, SUB_QUANTITY_SINGLE } from \"./action-types/cart-actions\";\nexport const addToCart = addedItems => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const userId = getState().firebase.auth.uid;\n    let state = getState(); // console.log(\"cartActions: add to cart\");\n    // console.log(state);\n\n    let itemToAdd = state.cart.addedItems.find(item => item.id === addedItems.id);\n\n    if (itemToAdd === undefined) {\n      addedItems.quantity = 1;\n      firestore.collection('carts').add({\n        addedItems,\n        customerFirstName: profile.firstName,\n        customerLastName: profile.lastName,\n        customerId: userId,\n        shoppedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      });\n    } else {\n      firestore.collection('carts').where('addedItems.id', '==', addedItems.id).get().then(snapshot => {\n        snapshot.forEach(doc => {\n          addedItems.quantity += 1; // console.log(doc.id);\n\n          firestore.collection('carts').doc(doc.id).update({\n            addedItems: addedItems,\n            shoppedAt: new Date()\n          }).then(() => {\n            // console.log('updated');\n            dispatch({\n              type: ADD_QUANTITY,\n              addedItems\n            });\n          }).catch(err => {\n            dispatch({\n              type: \"ADD_TO_CART_ERROR\",\n              err\n            });\n          });\n        });\n      });\n    }\n  };\n};\nexport const removeItem = removedItems => {\n  console.log(\"removedItem\");\n  console.log(removedItems); // const id = removedItem.id.toString();\n  // const cartsId = document.id;\n  // console.log(\"dispatch\", removedItems.addedItems.id);\n\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let itemToRemove = getState().cart.addedItems.find(item => item.id === removedItems.id);\n    console.log('itemToRemove', itemToRemove);\n    firestore.collection('carts').where('addedItems.id', '==', itemToRemove.id).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        console.log(doc.id);\n        firestore.collection('carts').doc(doc.id).delete().then(() => {\n          console.log('delete document successfully');\n          dispatch({\n            type: REMOVE_ITEM,\n            removedItems\n          });\n        });\n      });\n    }).catch(err => {\n      console.log('delete failed');\n      dispatch({\n        type: \"REMOVE_ITEM_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const addQuantity = addQuantityItem => {\n  // console.log(\"addQuantityItem:\", addQuantityItem);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let itemToAddQuantity = getState().cart.addedItems.find(item => item.id === addQuantityItem.id);\n    console.log('itemToAddQuantity', itemToAddQuantity);\n\n    if (itemToAddQuantity) {\n      firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get().then(snapshot => {\n        snapshot.forEach(doc => {\n          addQuantityItem.quantity += 1;\n          console.log('test quantity:', addQuantityItem.quantity);\n          console.log('add quantity successfully');\n          firestore.collection('carts').doc(doc.id).update({\n            addedItems: addQuantityItem,\n            shoppedAt: new Date()\n          }).then(() => {\n            console.log('updated');\n            dispatch({\n              type: ADD_QUANTITY_IN_CART,\n              addQuantityItem\n            });\n          }).catch(err => {\n            dispatch({\n              type: \"ADD_QUANTITY_IN_CART_ERROR\",\n              err\n            });\n          });\n        });\n      });\n    }\n  };\n};\nexport const subtractQuantity = subtractQuantityItem => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    console.log(subtractQuantityItem);\n\n    if (subtractQuantityItem.quantity === 1) {\n      firestore.collection('carts').where('addedItems.id', '==', subtractQuantityItem.id).get().then(snapshot => {\n        snapshot.forEach(doc => {\n          // subtractQuantityItem.quantity = 1;\n          firestore.collection('carts').doc(doc.id).delete().then(() => {\n            console.log('subtracted');\n            dispatch({\n              type: SUB_QUANTITY_SINGLE,\n              subtractQuantityItem\n            });\n          }).catch(err => {\n            dispatch({\n              type: \"SUB_QUANTITY_ERROR\",\n              err\n            });\n          });\n        });\n      });\n    } else {\n      firestore.collection('carts').where('addedItems.id', '==', subtractQuantityItem.id).get().then(snapshot => {\n        snapshot.forEach(doc => {\n          subtractQuantityItem.quantity -= 1;\n          firestore.collection('carts').doc(doc.id).update({\n            addedItems: subtractQuantityItem,\n            shoppedAt: new Date()\n          }).then(() => {\n            dispatch({\n              type: SUB_QUANTITY,\n              subtractQuantityItem\n            });\n          }).catch(err => {\n            dispatch({\n              type: \"SUB_QUANTITY_ERROR\",\n              err\n            });\n          });\n        });\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_QUANTITY_IN_CART","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","SUB_QUANTITY_SINGLE","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","userId","auth","uid","state","itemToAdd","cart","find","item","id","undefined","quantity","collection","add","customerFirstName","firstName","customerLastName","lastName","customerId","shoppedAt","Date","then","type","catch","err","where","get","snapshot","forEach","doc","update","removeItem","removedItems","console","log","itemToRemove","delete","addQuantity","addQuantityItem","itemToAddQuantity","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_QUANTITY_IN_CART, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, SUB_QUANTITY_SINGLE} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const userId = getState().firebase.auth.uid;\n        let state = getState();\n        // console.log(\"cartActions: add to cart\");\n        // console.log(state);\n        let itemToAdd = state.cart.addedItems.find(item => item.id === addedItems.id);\n        if (itemToAdd === undefined) {\n            addedItems.quantity = 1;\n            firestore.collection('carts').add({\n                addedItems,\n                customerFirstName: profile.firstName,\n                customerLastName: profile.lastName,\n                customerId: userId,\n                shoppedAt: new Date()\n            }).then(() => {\n                dispatch({type: ADD_TO_CART, addedItems});\n            }).catch(err => {\n                dispatch({type: \"ADD_TO_CART_ERROR\", err});\n            });\n        } else {\n            firestore.collection('carts').where('addedItems.id', '==', addedItems.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    addedItems.quantity += 1;\n                    // console.log(doc.id);\n                    firestore.collection('carts').doc(doc.id).update({\n                        addedItems: addedItems,\n                        shoppedAt: new Date()\n                    }).then(() => {\n                        // console.log('updated');\n                        dispatch({type: ADD_QUANTITY, addedItems});\n                    }).catch(err => {\n                        dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                    });\n                })\n            })\n        }\n    }\n};\n\nexport const removeItem = (removedItems) => {\n    console.log(\"removedItem\");\n    console.log(removedItems);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    // console.log(\"dispatch\", removedItems.addedItems.id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let itemToRemove = getState().cart.addedItems.find(item => item.id === removedItems.id);\n        console.log('itemToRemove', itemToRemove);\n\n        firestore.collection('carts').where('addedItems.id', '==', itemToRemove.id)\n            .get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n                    console.log(doc.id);\n                    firestore.collection('carts').doc(doc.id).delete().then(() => {\n                        console.log('delete document successfully')\n                        dispatch({type: REMOVE_ITEM, removedItems});\n                    });\n                }\n            )\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    // console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let itemToAddQuantity = getState().cart.addedItems.find(item => item.id === addQuantityItem.id);\n        console.log('itemToAddQuantity', itemToAddQuantity);\n\n        if (itemToAddQuantity) {\n            firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc => {\n                        addQuantityItem.quantity += 1;\n                        console.log('test quantity:', addQuantityItem.quantity);\n                        console.log('add quantity successfully');\n                        firestore.collection('carts').doc(doc.id).update({\n                            addedItems: addQuantityItem,\n                            shoppedAt: new Date()\n                        }).then(() => {\n                            console.log('updated');\n                            dispatch({type: ADD_QUANTITY_IN_CART, addQuantityItem});\n                        }).catch(err => {\n                            dispatch({type: \"ADD_QUANTITY_IN_CART_ERROR\", err});\n                        });\n                    })\n                )\n            });\n        }\n    }\n};\n\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        console.log(subtractQuantityItem);\n        if (subtractQuantityItem.quantity === 1) {\n            firestore.collection('carts').where('addedItems.id', '==', subtractQuantityItem.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    // subtractQuantityItem.quantity = 1;\n                    firestore.collection('carts').doc(doc.id).delete().then(() => {\n                        console.log('subtracted');\n                        dispatch({type: SUB_QUANTITY_SINGLE, subtractQuantityItem});\n                    }).catch(err => {\n                        dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n                    });\n                })\n            })\n        } else {\n            firestore.collection('carts').where('addedItems.id', '==', subtractQuantityItem.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    subtractQuantityItem.quantity -= 1;\n                    firestore.collection('carts').doc(doc.id).update({\n                        addedItems: subtractQuantityItem,\n                        shoppedAt: new Date()\n                    }).then(() => {\n                        dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n                    }).catch(err => {\n                        dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n                    });\n                })\n            })\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
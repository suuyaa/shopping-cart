{"ast":null,"code":"import Item1 from \"../../images/item1.jpg\";\nimport Item2 from \"../../images/item2.jpg\";\nimport Item3 from \"../../images/item3.jpg\";\nimport Item4 from \"../../images/item4.jpg\";\nimport Item5 from \"../../images/item5.jpg\";\nimport Item6 from \"../../images/item6.jpg\";\nimport { ADD_TO_CART, REMOVE_ITEM, ADD_QUANTITY, ADD_QUANTITY_IN_CART, SUB_QUANTITY, ADD_SHIPPING, SUB_SHIPPING } from \"../actions/action-types/cart-actions\";\nconst initState = {\n  items: [{\n    id: 1,\n    title: \"Winter body\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n    price: 30,\n    img: Item1,\n    quantity: 0\n  }, {\n    id: 2,\n    title: \"Adidas\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n    price: 30,\n    img: Item2,\n    quantity: 0\n  }, {\n    id: 3,\n    title: \"Vans\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n    price: 20,\n    img: Item3,\n    quantity: 0\n  }, {\n    id: 4,\n    title: \"White\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n    price: 20,\n    img: Item4,\n    quantity: 0\n  }, {\n    id: 5,\n    title: \"Boots\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n    price: 20,\n    img: Item5,\n    quantity: 0\n  }, {\n    id: 6,\n    title: \"Black\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n    price: 20,\n    img: Item6,\n    quantity: 0\n  }],\n  addedItems: [],\n  total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      console.log('action.addedItems:', action.addedItems);\n      console.log('action', action);\n      let newTotal = state.total + action.addedItems.price;\n      let itemToAdd = action.addedItems; // console.log(newTotal);\n\n      return { ...state,\n        addedItems: [...state.addedItems, itemToAdd],\n        total: newTotal\n      };\n\n    case REMOVE_ITEM:\n      console.log('action', action.removedItems);\n      let itemToRemove = action.removedItems;\n      let newItems = state.addedItems.filter(item => itemToRemove.id !== item.id);\n      let totalAfterRemove = state.total - itemToRemove.price * itemToRemove.quantity;\n      return { ...state,\n        addedItems: newItems,\n        total: totalAfterRemove\n      };\n\n    case ADD_QUANTITY:\n      // let itemToAddQuantity = state.items.find(item => item.id === action.id);\n      // console.log(\"cartReducer: add quantity\")\n      let newAddedTotal = state.total + action.addedItems.price; // console.log('add quantity:', action.addQuantityItem);\n      // console.log(state);\n\n      return { ...state,\n        total: newAddedTotal\n      };\n\n    case ADD_QUANTITY_IN_CART:\n      // let itemToAddQuantity = state.items.find(item => item.id === action.itemToAddQuantity.id);\n      // console.log(\"cartReducer: add quantity\")\n      let newAddedTotalInCart = state.total + action.addQuantityItem.price; // console.log('add quantity:', action.addQuantityItem);\n\n      console.log(\"why\", state);\n      return { ...state,\n        // quantity: ++itemToAddQuantity.quantity,\n        total: newAddedTotalInCart\n      };\n\n    case SUB_QUANTITY:\n      let itemToSub = state.items.find(item => item.id === action.subtractQuantityItem.id);\n\n      if (itemToSub.quantity === 1) {\n        let newItems = state.items.filter(item => item.id === action.id);\n        let newTotal = state.total - itemToSub.price;\n        return { ...state,\n          addedItems: newItems,\n          total: newTotal\n        };\n      } else {\n        return { ...state,\n          // quantity: --itemToSub.quantity,\n          total: state.total - itemToSub.price\n        };\n      }\n\n    default:\n      return state;\n  } // if (action.type === SUB_QUANTITY) {\n  //     let itemToSub = state.items.find(item => item.id === action.id);\n  //     if (itemToSub.quantity === 1) {\n  //         let newItems = state.items.filter((item => item.id === action.id));\n  //         let newTotal = state.total - itemToSub.price;\n  //         return {\n  //             ...state,\n  //             addedItems: newItems,\n  //             total: newTotal\n  //         }\n  //\n  //     } else {\n  //         return {\n  //             ...state,\n  //             quantity: --itemToSub.quantity,\n  //             total: state.total - itemToSub.price\n  //         }\n  //     }\n  // }\n  // if (action.type === ADD_SHIPPING) {\n  //     return {\n  //         ...state,\n  //         total: state.total + 6\n  //     }\n  // }\n  //\n  // if (action.type === SUB_SHIPPING) {\n  //     return {\n  //         ...state,\n  //         total: state.total - 6\n  //     }\n  // } else {\n  //     return state;\n  // }\n\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/reducers/cartReducer.js"],"names":["Item1","Item2","Item3","Item4","Item5","Item6","ADD_TO_CART","REMOVE_ITEM","ADD_QUANTITY","ADD_QUANTITY_IN_CART","SUB_QUANTITY","ADD_SHIPPING","SUB_SHIPPING","initState","items","id","title","description","price","img","quantity","addedItems","total","cartReducer","state","action","type","console","log","newTotal","itemToAdd","removedItems","itemToRemove","newItems","filter","item","totalAfterRemove","newAddedTotal","newAddedTotalInCart","addQuantityItem","itemToSub","find","subtractQuantityItem"],"mappings":"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","sourcesContent":["import Item1 from \"../../images/item1.jpg\"\nimport Item2 from \"../../images/item2.jpg\";\nimport Item3 from \"../../images/item3.jpg\";\nimport Item4 from \"../../images/item4.jpg\";\nimport Item5 from \"../../images/item5.jpg\";\nimport Item6 from \"../../images/item6.jpg\";\nimport {\n    ADD_TO_CART,\n    REMOVE_ITEM,\n    ADD_QUANTITY,\n    ADD_QUANTITY_IN_CART,\n    SUB_QUANTITY,\n    ADD_SHIPPING,\n    SUB_SHIPPING\n} from \"../actions/action-types/cart-actions\";\n\nconst initState = {\n    items: [\n        {\n            id: 1,\n            title: \"Winter body\",\n            description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n            price: 30,\n            img: Item1,\n            quantity: 0\n        },\n        {\n            id: 2,\n            title: \"Adidas\",\n            description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n            price: 30,\n            img: Item2,\n            quantity: 0\n        },\n        {\n            id: 3,\n            title: \"Vans\",\n            description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n            price: 20,\n            img: Item3,\n            quantity: 0\n        },\n        {\n            id: 4,\n            title: \"White\",\n            description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n            price: 20,\n            img: Item4,\n            quantity: 0\n        },\n        {\n            id: 5,\n            title: \"Boots\",\n            description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n            price: 20,\n            img: Item5,\n            quantity: 0\n        },\n        {\n            id: 6,\n            title: \"Black\",\n            description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n            price: 20,\n            img: Item6,\n            quantity: 0\n        }\n    ],\n    addedItems: [],\n    total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n        switch (action.type) {\n            case ADD_TO_CART:\n                console.log('action.addedItems:', action.addedItems);\n                console.log('action', action);\n                let newTotal = state.total + action.addedItems.price;\n                let itemToAdd = action.addedItems;\n                // console.log(newTotal);\n                return {\n                    ...state,\n                    addedItems: [...state.addedItems, itemToAdd],\n                    total: newTotal\n                };\n\n            case REMOVE_ITEM:\n                console.log('action', action.removedItems);\n                let itemToRemove = action.removedItems;\n                let newItems = state.addedItems.filter(item => itemToRemove.id !== item.id);\n                let totalAfterRemove = state.total - (itemToRemove.price) * itemToRemove.quantity;\n                    return {\n                        ...state,\n                        addedItems: newItems,\n                        total: totalAfterRemove\n                    };\n\n            case ADD_QUANTITY:\n                // let itemToAddQuantity = state.items.find(item => item.id === action.id);\n                // console.log(\"cartReducer: add quantity\")\n                let newAddedTotal = state.total + action.addedItems.price;\n                // console.log('add quantity:', action.addQuantityItem);\n                // console.log(state);\n                return {\n                        ...state,\n                        total: newAddedTotal\n                    };\n\n            case ADD_QUANTITY_IN_CART:\n                // let itemToAddQuantity = state.items.find(item => item.id === action.itemToAddQuantity.id);\n                // console.log(\"cartReducer: add quantity\")\n                let newAddedTotalInCart = state.total + action.addQuantityItem.price;\n                // console.log('add quantity:', action.addQuantityItem);\n                console.log(\"why\",state);\n                return {\n                    ...state,\n                    // quantity: ++itemToAddQuantity.quantity,\n                    total: newAddedTotalInCart\n                };\n            case SUB_QUANTITY:\n                let itemToSub = state.items.find(item => item.id === action.subtractQuantityItem.id);\n                if (itemToSub.quantity === 1) {\n                    let newItems = state.items.filter((item => item.id === action.id));\n                    let newTotal = state.total - itemToSub.price;\n                    return {\n                        ...state,\n                        addedItems: newItems,\n                        total: newTotal\n                    }\n\n                } else {\n                    return {\n                        ...state,\n                        // quantity: --itemToSub.quantity,\n                        total: state.total - itemToSub.price\n                    }\n                }\n            default:\n                return state;\n        }\n\n\n        // if (action.type === SUB_QUANTITY) {\n        //     let itemToSub = state.items.find(item => item.id === action.id);\n        //     if (itemToSub.quantity === 1) {\n        //         let newItems = state.items.filter((item => item.id === action.id));\n        //         let newTotal = state.total - itemToSub.price;\n        //         return {\n        //             ...state,\n        //             addedItems: newItems,\n        //             total: newTotal\n        //         }\n        //\n        //     } else {\n        //         return {\n        //             ...state,\n        //             quantity: --itemToSub.quantity,\n        //             total: state.total - itemToSub.price\n        //         }\n        //     }\n        // }\n        // if (action.type === ADD_SHIPPING) {\n        //     return {\n        //         ...state,\n        //         total: state.total + 6\n        //     }\n        // }\n        //\n        // if (action.type === SUB_SHIPPING) {\n        //     return {\n        //         ...state,\n        //         total: state.total - 6\n        //     }\n        // } else {\n        //     return state;\n        // }\n    }\n;\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}
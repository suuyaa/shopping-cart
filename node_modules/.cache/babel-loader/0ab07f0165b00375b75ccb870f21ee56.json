{"ast":null,"code":"import { ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY } from \"./action-types/cart-actions\";\nexport const addToCart = addedItems => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let state = getState();\n    console.log(\"cartActions: add to cart\");\n    console.log(state);\n    let addedItem = state.items.find(item => item.id === addedItems.id);\n    let existedItem = state.addedItems.find(item => addedItems.id === item.id); // console.log(state.addedItems);\n\n    if (existedItem) {\n      addedItem.quantity += 1; // console.log(\"11111\");\n\n      return { ...state,\n        total: state.total + addedItem.price\n      };\n    } else {\n      addedItem.quantity = 1; // console.log(\"22222\");\n\n      return { ...state,\n        addedItems: [...state.addedItems, addedItem],\n        total: state.total + addedItem.price\n      };\n    }\n\n    firestore.collection('carts').add({\n      addedItems,\n      customerFirstName: 'Raj',\n      customerLastName: 'Koothrappali',\n      customerId: 12345,\n      shoppedAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: ADD_TO_CART,\n        addedItems\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_TO_CART_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const removeItem = id => {\n  // console.log(\"removedItem\");\n  // console.log(removedItem);\n  // const id = removedItem.id.toString();\n  // const cartsId = document.id;\n  console.log(\"dispatch\", id);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').doc(id).delete().then(() => {\n      console.log(\"deleted\");\n      dispatch({\n        type: REMOVE_ITEM,\n        id\n      });\n    }).catch(err => {\n      console.log('delete failed');\n      dispatch({\n        type: \"REMOVE_ITEM_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const addQuantity = addQuantityItem => {\n  console.log(\"addQuantityItem:\", addQuantityItem);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let cartQuantity = addQuantityItem.quantity;\n    console.log('cart', cartQuantity);\n    firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get().then(snapshot => {\n      // dispatch({type: ADD_QUANTITY, addQuantityItem});\n      snapshot.forEach(doc => {\n        // doc.data().addedItems.quantity = addQuantityItem.quantity;\n        let test = doc.data();\n        let test2 = test.addedItems;\n        console.log(test.addedItems);\n        dispatch({\n          type: ADD_QUANTITY,\n          addedItems: test.addedItems\n        }); // console.log(doc.id, '=>', doc.data());\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const subtractQuantity = subtractQuantityItem => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').delete({\n      customerFirstName: 'Raj',\n      customerLastName: 'Koothrappali',\n      customerId: 12345,\n      shoppedAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: SUB_QUANTITY,\n        subtractQuantityItem\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SUB_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","state","console","log","addedItem","items","find","item","id","existedItem","quantity","total","price","collection","add","customerFirstName","customerLastName","customerId","shoppedAt","Date","then","type","catch","err","removeItem","doc","delete","addQuantity","addQuantityItem","cartQuantity","where","get","snapshot","forEach","test","data","test2","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let state = getState();\n        console.log(\"cartActions: add to cart\");\n        console.log(state);\n        let addedItem = state.items.find(item => item.id === addedItems.id);\n        let existedItem = state.addedItems.find(item => addedItems.id === item.id);\n        // console.log(state.addedItems);\n        if (existedItem) {\n            addedItem.quantity += 1;\n            // console.log(\"11111\");\n            return {\n                ...state,\n                total: state.total + addedItem.price\n            }\n        } else {\n            addedItem.quantity = 1;\n            // console.log(\"22222\");\n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total: state.total + addedItem.price\n            }\n        }\n\n        firestore.collection('carts').add({\n            addedItems,\n            customerFirstName: 'Raj',\n            customerLastName: 'Koothrappali',\n            customerId: 12345,\n            shoppedAt: new Date()\n        }).then(() => {\n            dispatch({type: ADD_TO_CART, addedItems});\n        }).catch(err => {\n            dispatch({type: \"ADD_TO_CART_ERROR\", err});\n        })\n    }\n};\n\nexport const removeItem = (id) => {\n    // console.log(\"removedItem\");\n    // console.log(removedItem);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    console.log(\"dispatch\", id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').doc(id).delete().then(() => {\n            console.log(\"deleted\");\n            dispatch({type: REMOVE_ITEM, id});\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let cartQuantity = addQuantityItem.quantity;\n        console.log('cart', cartQuantity);\n        firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get(\n            // quantity: ++cartQuantity\n        ).then((snapshot) => {\n            // dispatch({type: ADD_QUANTITY, addQuantityItem});\n            snapshot.forEach((doc => {\n                // doc.data().addedItems.quantity = addQuantityItem.quantity;\n                let test = doc.data();\n                let test2 = test.addedItems;\n                console.log(test.addedItems);\n                dispatch({type: ADD_QUANTITY, addedItems: test.addedItems});\n                // console.log(doc.id, '=>', doc.data());\n            }))\n        }).catch(err => {\n            dispatch({type: \"ADD_QUANTITY_ERROR\", err});\n        })\n    }\n\n};\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').delete({\n\n            customerFirstName: 'Raj',\n            customerLastName: 'Koothrappali',\n            customerId: 12345,\n            shoppedAt: new Date()\n        }).then(() => {\n            dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n        }).catch(err => {\n            dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
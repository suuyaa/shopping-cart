{"ast":null,"code":"import { ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY } from \"./action-types/cart-actions\";\nexport const addToCart = addedItems => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const userId = getState().firebase.auth.uid;\n    let state = getState();\n    console.log(\"cartActions: add to cart\");\n    console.log(state);\n    let itemToAdd = state.cart.addedItems.find(item => item.id === addedItems.id);\n    console.log(itemToAdd);\n\n    if (itemToAdd === undefined) {\n      addedItems.quantity = 1;\n      firestore.collection('carts').add({\n        addedItems,\n        customerFirstName: profile.firstName,\n        customerLastName: profile.lastName,\n        customerId: userId,\n        shoppedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      });\n    } else {\n      firestore.collection('carts').where('addedItems.id', '==', addedItems.id).get().then(snapshot => {\n        snapshot.forEach(doc => {\n          console.log(doc.id); // firestore.collection('carts').doc(doc.id).update( {\n          //     // console.log('add to cart again')\n          // });\n        });\n      }).catch(err => {\n        console.log('delete failed');\n        dispatch({\n          type: \"REMOVE_ITEM_ERROR\",\n          err\n        });\n      }); // addedItems.quantity += 1;\n      // firestore.collection('carts').add({\n      //     addedItems,\n      //     customerFirstName: profile.firstName,\n      //     customerLastName: profile.lastName,\n      //     customerId: userId,\n      //     shoppedAt: new Date()\n      // }).then(() => {\n      //     dispatch({type: ADD_TO_CART, addedItems});\n      // }).catch(err => {\n      //     dispatch({type: \"ADD_TO_CART_ERROR\", err});\n      // });\n    }\n  };\n};\nexport const removeItem = removedItems => {\n  console.log(\"removedItem\");\n  console.log(removedItems); // const id = removedItem.id.toString();\n  // const cartsId = document.id;\n  // console.log(\"dispatch\", removedItems.addedItems.id);\n\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore(); // const docID = getState().firestore.ordered.carts[0].id;\n    // console.log(docID);\n\n    let itemToRemove = getState().cart.addedItems.find(item => item.id === removedItems.id);\n    console.log('itemToRemove', itemToRemove);\n    firestore.collection('carts').where('addedItems.id', '==', itemToRemove.id).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        console.log(doc.id);\n        firestore.collection('carts').doc(doc.id).delete().then(() => {\n          console.log('delete document successfully');\n          dispatch({\n            type: REMOVE_ITEM,\n            removedItems\n          });\n        });\n      });\n    }).catch(err => {\n      console.log('delete failed');\n      dispatch({\n        type: \"REMOVE_ITEM_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const addQuantity = addQuantityItem => {\n  console.log(\"addQuantityItem:\", addQuantityItem);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let cartQuantity = addQuantityItem.quantity;\n    console.log('cart', cartQuantity);\n    firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get().then(snapshot => {\n      // dispatch({type: ADD_QUANTITY, addQuantityItem});\n      snapshot.forEach(doc => {\n        // doc.data().addedItems.quantity = addQuantityItem.quantity;\n        let test = doc.data();\n        let test2 = test.addedItems;\n        console.log('test', test.addedItems);\n        dispatch({\n          type: ADD_QUANTITY,\n          addedItems: test.addedItems\n        }); // console.log(doc.id, '=>', doc.data());\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const subtractQuantity = subtractQuantityItem => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').delete({\n      customerFirstName: 'Raj',\n      customerLastName: 'Koothrappali',\n      customerId: 12345,\n      shoppedAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: SUB_QUANTITY,\n        subtractQuantityItem\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SUB_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","userId","auth","uid","state","console","log","itemToAdd","cart","find","item","id","undefined","quantity","collection","add","customerFirstName","firstName","customerLastName","lastName","customerId","shoppedAt","Date","then","type","catch","err","where","get","snapshot","forEach","doc","removeItem","removedItems","itemToRemove","delete","addQuantity","addQuantityItem","cartQuantity","test","data","test2","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const userId = getState().firebase.auth.uid;\n        let state = getState();\n        console.log(\"cartActions: add to cart\");\n        console.log(state);\n        let itemToAdd = state.cart.addedItems.find(item => item.id === addedItems.id);\n        console.log(itemToAdd);\n        if (itemToAdd === undefined) {\n            addedItems.quantity = 1;\n            firestore.collection('carts').add({\n                addedItems,\n                customerFirstName: profile.firstName,\n                customerLastName: profile.lastName,\n                customerId: userId,\n                shoppedAt: new Date()\n            }).then(() => {\n                dispatch({type: ADD_TO_CART, addedItems});\n            }).catch(err => {\n                dispatch({type: \"ADD_TO_CART_ERROR\", err});\n            });\n        } else {\n            firestore.collection('carts').where('addedItems.id', '==', addedItems.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                        console.log(doc.id);\n                        // firestore.collection('carts').doc(doc.id).update( {\n                        //     // console.log('add to cart again')\n                        // });\n                    }\n                )\n            }).catch(err => {\n                console.log('delete failed');\n                dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n            })\n\n\n            // addedItems.quantity += 1;\n            // firestore.collection('carts').add({\n            //     addedItems,\n            //     customerFirstName: profile.firstName,\n            //     customerLastName: profile.lastName,\n            //     customerId: userId,\n            //     shoppedAt: new Date()\n            // }).then(() => {\n            //     dispatch({type: ADD_TO_CART, addedItems});\n            // }).catch(err => {\n            //     dispatch({type: \"ADD_TO_CART_ERROR\", err});\n            // });\n        }\n    }\n\n\n};\n\nexport const removeItem = (removedItems) => {\n    console.log(\"removedItem\");\n    console.log(removedItems);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    // console.log(\"dispatch\", removedItems.addedItems.id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        // const docID = getState().firestore.ordered.carts[0].id;\n        // console.log(docID);\n        let itemToRemove = getState().cart.addedItems.find(item => item.id === removedItems.id);\n        console.log('itemToRemove', itemToRemove);\n\n        firestore.collection('carts').where('addedItems.id', '==', itemToRemove.id)\n            .get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n                    console.log(doc.id);\n                    firestore.collection('carts').doc(doc.id).delete().then(() => {\n                        console.log('delete document successfully')\n                        dispatch({type: REMOVE_ITEM, removedItems});\n                    });\n                }\n            )\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let cartQuantity = addQuantityItem.quantity;\n        console.log('cart', cartQuantity);\n        firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get(\n        ).then((snapshot) => {\n            // dispatch({type: ADD_QUANTITY, addQuantityItem});\n            snapshot.forEach((doc => {\n                // doc.data().addedItems.quantity = addQuantityItem.quantity;\n                let test = doc.data();\n                let test2 = test.addedItems;\n                console.log('test', test.addedItems);\n                dispatch({type: ADD_QUANTITY, addedItems: test.addedItems});\n                // console.log(doc.id, '=>', doc.data());\n            }))\n        }).catch(err => {\n            dispatch({type: \"ADD_QUANTITY_ERROR\", err});\n        })\n    }\n\n};\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').delete({\n\n            customerFirstName: 'Raj',\n            customerLastName: 'Koothrappali',\n            customerId: 12345,\n            shoppedAt: new Date()\n        }).then(() => {\n            dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n        }).catch(err => {\n            dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY } from \"./action-types/cart-actions\";\nexport const addToCart = addedItems => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let state = getState(); // console.log(\"cartActions: add to cart\");\n    // console.log(state);\n\n    let itemToAdd = state.cart.items.find(item => item.id === addedItems.id);\n\n    if (itemToAdd) {\n      addedItems.quantity = 1;\n      firestore.collection('carts').add({\n        addedItems,\n        customerFirstName: 'Raj',\n        customerLastName: 'Koothrappali',\n        customerId: 12345,\n        shoppedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      });\n    } else {\n      addedItems.quantity += 1;\n      firestore.collection('carts').add({\n        addedItems,\n        customerFirstName: 'Raj',\n        customerLastName: 'Koothrappali',\n        customerId: 12345,\n        shoppedAt: new Date()\n      }).then(() => {\n        dispatch({\n          type: ADD_TO_CART,\n          addedItems\n        });\n      }).catch(err => {\n        dispatch({\n          type: \"ADD_TO_CART_ERROR\",\n          err\n        });\n      }); // return {\n      //     ...state,\n      //     total: state.total + addedItems.price\n      // }\n    }\n  };\n};\nexport const removeItem = id => {\n  // console.log(\"removedItem\");\n  // console.log(removedItem);\n  // const id = removedItem.id.toString();\n  // const cartsId = document.id;\n  console.log(\"dispatch\", id);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').doc(id).delete().then(() => {\n      console.log(\"deleted\");\n      dispatch({\n        type: REMOVE_ITEM,\n        id\n      });\n    }).catch(err => {\n      console.log('delete failed');\n      dispatch({\n        type: \"REMOVE_ITEM_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const addQuantity = addQuantityItem => {\n  console.log(\"addQuantityItem:\", addQuantityItem);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    let cartQuantity = addQuantityItem.quantity;\n    console.log('cart', cartQuantity);\n    firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get().then(snapshot => {\n      // dispatch({type: ADD_QUANTITY, addQuantityItem});\n      snapshot.forEach(doc => {\n        // doc.data().addedItems.quantity = addQuantityItem.quantity;\n        let test = doc.data();\n        let test2 = test.addedItems;\n        console.log(test.addedItems);\n        dispatch({\n          type: ADD_QUANTITY,\n          addedItems: test.addedItems\n        }); // console.log(doc.id, '=>', doc.data());\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const subtractQuantity = subtractQuantityItem => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('carts').delete({\n      customerFirstName: 'Raj',\n      customerLastName: 'Koothrappali',\n      customerId: 12345,\n      shoppedAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: SUB_QUANTITY,\n        subtractQuantityItem\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"SUB_QUANTITY_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","state","itemToAdd","cart","items","find","item","id","quantity","collection","add","customerFirstName","customerLastName","customerId","shoppedAt","Date","then","type","catch","err","removeItem","console","log","doc","delete","addQuantity","addQuantityItem","cartQuantity","where","get","snapshot","forEach","test","data","test2","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n        return (dispatch, getState, {getFirebase, getFirestore}) => {\n            const firestore = getFirestore();\n            let state = getState();\n            // console.log(\"cartActions: add to cart\");\n            // console.log(state);\n            let itemToAdd = state.cart.items.find(item => item.id === addedItems.id);\n            if (itemToAdd) {\n                addedItems.quantity = 1;\n                firestore.collection('carts').add({\n                    addedItems,\n                    customerFirstName: 'Raj',\n                    customerLastName: 'Koothrappali',\n                    customerId: 12345,\n                    shoppedAt: new Date()\n                }).then(() => {\n                    dispatch({type: ADD_TO_CART, addedItems});\n                }).catch(err => {\n                    dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                });\n            } else {\n                addedItems.quantity += 1;\n                firestore.collection('carts').add({\n                    addedItems,\n                    customerFirstName: 'Raj',\n                    customerLastName: 'Koothrappali',\n                    customerId: 12345,\n                    shoppedAt: new Date()\n                }).then(() => {\n                    dispatch({type: ADD_TO_CART, addedItems});\n                }).catch(err => {\n                    dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                });\n                // return {\n                //     ...state,\n                //     total: state.total + addedItems.price\n                // }\n            }\n\n        }\n\n\n};\n\nexport const removeItem = (id) => {\n    // console.log(\"removedItem\");\n    // console.log(removedItem);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    console.log(\"dispatch\", id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').doc(id).delete().then(() => {\n            console.log(\"deleted\");\n            dispatch({type: REMOVE_ITEM, id});\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let cartQuantity = addQuantityItem.quantity;\n        console.log('cart', cartQuantity);\n        firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id).get(\n            // quantity: ++cartQuantity\n        ).then((snapshot) => {\n            // dispatch({type: ADD_QUANTITY, addQuantityItem});\n            snapshot.forEach((doc => {\n                // doc.data().addedItems.quantity = addQuantityItem.quantity;\n                let test = doc.data();\n                let test2 = test.addedItems;\n                console.log(test.addedItems);\n                dispatch({type: ADD_QUANTITY, addedItems: test.addedItems});\n                // console.log(doc.id, '=>', doc.data());\n            }))\n        }).catch(err => {\n            dispatch({type: \"ADD_QUANTITY_ERROR\", err});\n        })\n    }\n\n};\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        firestore.collection('carts').delete({\n\n            customerFirstName: 'Raj',\n            customerLastName: 'Koothrappali',\n            customerId: 12345,\n            shoppedAt: new Date()\n        }).then(() => {\n            dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n        }).catch(err => {\n            dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
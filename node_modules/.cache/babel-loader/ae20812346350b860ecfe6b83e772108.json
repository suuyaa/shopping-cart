{"ast":null,"code":"import{ADD_QUANTITY,ADD_QUANTITY_IN_CART,ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,SUB_QUANTITY_SINGLE}from\"./action-types/cart-actions\";export var addToCart=function addToCart(addedItems){return function(dispatch,getState,_ref){var getFirebase=_ref.getFirebase,getFirestore=_ref.getFirestore;var firestore=getFirestore();var profile=getState().firebase.profile;var userId=getState().firebase.auth.uid;var state=getState();// console.log(\"cartActions: add to cart\");\n// console.log(state);\nvar itemToAdd=state.cart.addedItems.find(function(item){return item.id===addedItems.id;});if(itemToAdd===undefined){addedItems.quantity=1;firestore.collection('carts').add({addedItems:addedItems,customerFirstName:profile.firstName,customerLastName:profile.lastName,customerId:userId,shoppedAt:new Date()}).then(function(){dispatch({type:ADD_TO_CART,addedItems:addedItems});}).catch(function(err){dispatch({type:\"ADD_TO_CART_ERROR\",err:err});});}else{firestore.collection('carts').where('addedItems.id','==',addedItems.id).get().then(function(snapshot){snapshot.forEach(function(doc){addedItems.quantity+=1;// console.log(doc.id);\nfirestore.collection('carts').doc(doc.id).update({addedItems:addedItems,shoppedAt:new Date()}).then(function(){// console.log('updated');\ndispatch({type:ADD_QUANTITY,addedItems:addedItems});}).catch(function(err){dispatch({type:\"ADD_TO_CART_ERROR\",err:err});});});});}};};export var removeItem=function removeItem(removedItems){console.log(\"removedItem\");console.log(removedItems);// const id = removedItem.id.toString();\n// const cartsId = document.id;\n// console.log(\"dispatch\", removedItems.addedItems.id);\nreturn function(dispatch,getState,_ref2){var getFirebase=_ref2.getFirebase,getFirestore=_ref2.getFirestore;var firestore=getFirestore();var itemToRemove=getState().cart.addedItems.find(function(item){return item.id===removedItems.id;});console.log('itemToRemove',itemToRemove);firestore.collection('carts').where('addedItems.id','==',itemToRemove.id).get().then(function(snapshot){snapshot.forEach(function(doc){console.log(doc.id);firestore.collection('carts').doc(doc.id).delete().then(function(){console.log('delete document successfully');dispatch({type:REMOVE_ITEM,removedItems:removedItems});});});}).catch(function(err){console.log('delete failed');dispatch({type:\"REMOVE_ITEM_ERROR\",err:err});});};};export var addQuantity=function addQuantity(addQuantityItem){// console.log(\"addQuantityItem:\", addQuantityItem);\nreturn function(dispatch,getState,_ref3){var getFirebase=_ref3.getFirebase,getFirestore=_ref3.getFirestore;var firestore=getFirestore();var itemToAddQuantity=getState().cart.addedItems.find(function(item){return item.id===addQuantityItem.id;});console.log('itemToAddQuantity',itemToAddQuantity);if(itemToAddQuantity){firestore.collection('carts').where(\"addedItems.id\",'==',addQuantityItem.id).get().then(function(snapshot){snapshot.forEach(function(doc){addQuantityItem.quantity+=1;console.log('test quantity:',addQuantityItem.quantity);console.log('add quantity successfully');firestore.collection('carts').doc(doc.id).update({addedItems:addQuantityItem,shoppedAt:new Date()}).then(function(){console.log('updated');dispatch({type:ADD_QUANTITY_IN_CART,addQuantityItem:addQuantityItem});}).catch(function(err){dispatch({type:\"ADD_QUANTITY_IN_CART_ERROR\",err:err});});});});}};};export var subtractQuantity=function subtractQuantity(subtractQuantityItem){return function(dispatch,getState,_ref4){var getFirebase=_ref4.getFirebase,getFirestore=_ref4.getFirestore;var firestore=getFirestore();console.log(subtractQuantityItem);if(subtractQuantityItem.quantity===1){firestore.collection('carts').where('addedItems.id','==',subtractQuantityItem.id).get().then(function(snapshot){snapshot.forEach(function(doc){// subtractQuantityItem.quantity = 1;\nfirestore.collection('carts').doc(doc.id).delete().then(function(){console.log('subtracted');dispatch({type:SUB_QUANTITY_SINGLE,subtractQuantityItem:subtractQuantityItem});}).catch(function(err){dispatch({type:\"SUB_QUANTITY_ERROR\",err:err});});});});}else{firestore.collection('carts').where('addedItems.id','==',subtractQuantityItem.id).get().then(function(snapshot){snapshot.forEach(function(doc){subtractQuantityItem.quantity-=1;firestore.collection('carts').doc(doc.id).update({addedItems:subtractQuantityItem,shoppedAt:new Date()}).then(function(){dispatch({type:SUB_QUANTITY,subtractQuantityItem:subtractQuantityItem});}).catch(function(err){dispatch({type:\"SUB_QUANTITY_ERROR\",err:err});});});});}};};","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/components/actions/cartActions.js"],"names":["ADD_QUANTITY","ADD_QUANTITY_IN_CART","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","SUB_QUANTITY_SINGLE","addToCart","addedItems","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","userId","auth","uid","state","itemToAdd","cart","find","item","id","undefined","quantity","collection","add","customerFirstName","firstName","customerLastName","lastName","customerId","shoppedAt","Date","then","type","catch","err","where","get","snapshot","forEach","doc","update","removeItem","removedItems","console","log","itemToRemove","delete","addQuantity","addQuantityItem","itemToAddQuantity","subtractQuantity","subtractQuantityItem"],"mappings":"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","sourcesContent":["import {ADD_QUANTITY, ADD_QUANTITY_IN_CART, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, SUB_QUANTITY_SINGLE} from \"./action-types/cart-actions\";\n\nexport const addToCart = (addedItems) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const userId = getState().firebase.auth.uid;\n        let state = getState();\n        // console.log(\"cartActions: add to cart\");\n        // console.log(state);\n        let itemToAdd = state.cart.addedItems.find(item => item.id === addedItems.id);\n        if (itemToAdd === undefined) {\n            addedItems.quantity = 1;\n            firestore.collection('carts').add({\n                addedItems,\n                customerFirstName: profile.firstName,\n                customerLastName: profile.lastName,\n                customerId: userId,\n                shoppedAt: new Date()\n            }).then(() => {\n                dispatch({type: ADD_TO_CART, addedItems});\n            }).catch(err => {\n                dispatch({type: \"ADD_TO_CART_ERROR\", err});\n            });\n        } else {\n            firestore.collection('carts').where('addedItems.id', '==', addedItems.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    addedItems.quantity += 1;\n                    // console.log(doc.id);\n                    firestore.collection('carts').doc(doc.id).update({\n                        addedItems: addedItems,\n                        shoppedAt: new Date()\n                    }).then(() => {\n                        // console.log('updated');\n                        dispatch({type: ADD_QUANTITY, addedItems});\n                    }).catch(err => {\n                        dispatch({type: \"ADD_TO_CART_ERROR\", err});\n                    });\n                })\n            })\n        }\n    }\n};\n\nexport const removeItem = (removedItems) => {\n    console.log(\"removedItem\");\n    console.log(removedItems);\n    // const id = removedItem.id.toString();\n    // const cartsId = document.id;\n    // console.log(\"dispatch\", removedItems.addedItems.id);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let itemToRemove = getState().cart.addedItems.find(item => item.id === removedItems.id);\n        console.log('itemToRemove', itemToRemove);\n\n        firestore.collection('carts').where('addedItems.id', '==', itemToRemove.id)\n            .get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n                    console.log(doc.id);\n                    firestore.collection('carts').doc(doc.id).delete().then(() => {\n                        console.log('delete document successfully')\n                        dispatch({type: REMOVE_ITEM, removedItems});\n                    });\n                }\n            )\n        }).catch(err => {\n            console.log('delete failed');\n            dispatch({type: \"REMOVE_ITEM_ERROR\", err});\n        })\n    }\n};\n\nexport const addQuantity = (addQuantityItem) => {\n    // console.log(\"addQuantityItem:\", addQuantityItem);\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        let itemToAddQuantity = getState().cart.addedItems.find(item => item.id === addQuantityItem.id);\n        console.log('itemToAddQuantity', itemToAddQuantity);\n\n        if (itemToAddQuantity) {\n            firestore.collection('carts').where(\"addedItems.id\", '==', addQuantityItem.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc => {\n                        addQuantityItem.quantity += 1;\n                        console.log('test quantity:', addQuantityItem.quantity);\n                        console.log('add quantity successfully');\n                        firestore.collection('carts').doc(doc.id).update({\n                            addedItems: addQuantityItem,\n                            shoppedAt: new Date()\n                        }).then(() => {\n                            console.log('updated');\n                            dispatch({type: ADD_QUANTITY_IN_CART, addQuantityItem});\n                        }).catch(err => {\n                            dispatch({type: \"ADD_QUANTITY_IN_CART_ERROR\", err});\n                        });\n                    })\n                )\n            });\n        }\n    }\n};\n\nexport const subtractQuantity = (subtractQuantityItem) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        console.log(subtractQuantityItem);\n        if (subtractQuantityItem.quantity === 1) {\n            firestore.collection('carts').where('addedItems.id', '==', subtractQuantityItem.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    // subtractQuantityItem.quantity = 1;\n                    firestore.collection('carts').doc(doc.id).delete().then(() => {\n                        console.log('subtracted');\n                        dispatch({type: SUB_QUANTITY_SINGLE, subtractQuantityItem});\n                    }).catch(err => {\n                        dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n                    });\n                })\n            })\n        } else {\n            firestore.collection('carts').where('addedItems.id', '==', subtractQuantityItem.id)\n                .get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    subtractQuantityItem.quantity -= 1;\n                    firestore.collection('carts').doc(doc.id).update({\n                        addedItems: subtractQuantityItem,\n                        shoppedAt: new Date()\n                    }).then(() => {\n                        dispatch({type: SUB_QUANTITY, subtractQuantityItem});\n                    }).catch(err => {\n                        dispatch({type: \"SUB_QUANTITY_ERROR\", err});\n                    });\n                })\n            })\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
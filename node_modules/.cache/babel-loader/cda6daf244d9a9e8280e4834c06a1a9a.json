{"ast":null,"code":"var _jsxFileName = \"/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport rootReducer from \"./components/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport * as serviceWorker from './serviceWorker';\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(fbConfig)));\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }\n}))), document.getElementById(\"root\"));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/index.js"],"names":["React","ReactDOM","App","rootReducer","Provider","applyMiddleware","createStore","compose","serviceWorker","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","fbConfig","firebase","store","withExtraArgument","rrfProps","config","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAAQC,QAAR,QAAyB,aAAzB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,uBAAtC,QAAoE,iBAApE;AACA,SAAQC,0BAAR,EAAoCC,WAApC,QAAsD,sBAAtD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,KAAK,GAAGX,WAAW,CAACH,WAAD,EACrBI,OAAO,CACHF,eAAe,CAACI,KAAK,CAACS,iBAAN,CAAwB;AAACJ,EAAAA,WAAD;AAAcH,EAAAA;AAAd,CAAxB,CAAD,CADZ,EAEHD,cAAc,CAACK,QAAD,CAFX,CADc,CAAzB;AAOA,MAAMI,QAAQ,GAAG;AACbH,EAAAA,QADa;AAEbI,EAAAA,MAAM,EAAEL,QAFK;AAGbM,EAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHH;AAIbT,EAAAA;AAJa,CAAjB;AAQAX,QAAQ,CAACqB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,0BAAD,oBAAgCE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,EAMII,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ;AASAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport rootReducer from \"./components/reducers/rootReducer\";\nimport {Provider, } from \"react-redux\";\nimport {applyMiddleware, createStore, compose} from \"redux\";\nimport * as serviceWorker from './serviceWorker';\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from \"redux-firestore\";\nimport {ReactReduxFirebaseProvider, getFirebase} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig)\n    )\n);\n\nconst rrfProps = {\n    firebase,\n    config: fbConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}
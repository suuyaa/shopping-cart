{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import App from\"./App\";import rootReducer from\"./components/reducers/rootReducer\";import{Provider,useSelector}from\"react-redux\";import{applyMiddleware,createStore,compose}from\"redux\";import*as serviceWorker from'./serviceWorker';import thunk from\"redux-thunk\";import{reduxFirestore,getFirestore,createFirestoreInstance}from\"redux-firestore\";import{ReactReduxFirebaseProvider,getFirebase,isLoaded}from\"react-redux-firebase\";import fbConfig from\"./config/fbConfig\";import firebase from\"firebase/app\";var store=createStore(rootReducer,compose(applyMiddleware(thunk.withExtraArgument({getFirebase:getFirebase,getFirestore:getFirestore})),reduxFirestore(fbConfig)));var config={userProfile:'users',// where profiles are stored in database,\nuseFirestoreForProfile:true};var rrfProps={firebase:firebase,config:config,dispatch:store.dispatch,createFirestoreInstance:createFirestoreInstance};// const profileSpecificProps = {\n//     userProfile: 'users',\n//     useFirestoreForProfile: true,\n//     enableRedirectHandling: false,\n//     resetBeforeLogin: false\n// }\n//\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     config: profileSpecificProps,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance\n// };\n//\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance,\n//     userProfile: 'users',\n//     useFirestoreForProfile: true,\n//     presence: 'presence',\n//     sessions: 'sessions'\n// };\nfunction AuthIsLoaded(_ref){var children=_ref.children;var auth=useSelector(function(state){return state.firebase.auth;});if(!isLoaded(auth))return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");return children;}ReactDOM.render(/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(ReactReduxFirebaseProvider,rrfProps,/*#__PURE__*/React.createElement(AuthIsLoaded,null,/*#__PURE__*/React.createElement(App,null)))),document.getElementById(\"root\"));serviceWorker.unregister();","map":{"version":3,"sources":["/Users/suya/Desktop/front end study/webProjects/shopping-cart/src/index.js"],"names":["React","ReactDOM","App","rootReducer","Provider","useSelector","applyMiddleware","createStore","compose","serviceWorker","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","isLoaded","fbConfig","firebase","store","withExtraArgument","config","userProfile","useFirestoreForProfile","rrfProps","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,OAAQC,QAAR,CAAkBC,WAAlB,KAAoC,aAApC,CACA,OAAQC,eAAR,CAAyBC,WAAzB,CAAsCC,OAAtC,KAAoD,OAApD,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAAQC,cAAR,CAAwBC,YAAxB,CAAsCC,uBAAtC,KAAoE,iBAApE,CACA,OAAQC,0BAAR,CAAoCC,WAApC,CAAiDC,QAAjD,KAAgE,sBAAhE,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CAEA,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CAACJ,WAAD,CACrBK,OAAO,CACHF,eAAe,CAACI,KAAK,CAACU,iBAAN,CAAwB,CAACL,WAAW,CAAXA,WAAD,CAAcH,YAAY,CAAZA,YAAd,CAAxB,CAAD,CADZ,CAEHD,cAAc,CAACM,QAAD,CAFX,CADc,CAAzB,CAOA,GAAMI,CAAAA,MAAM,CAAG,CACXC,WAAW,CAAE,OADF,CACW;AACtBC,sBAAsB,CAAE,IAFb,CAAf,CAMA,GAAMC,CAAAA,QAAQ,CAAG,CACbN,QAAQ,CAARA,QADa,CAEbG,MAAM,CAANA,MAFa,CAGbI,QAAQ,CAAEN,KAAK,CAACM,QAHH,CAIbZ,uBAAuB,CAAvBA,uBAJa,CAAjB,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAASa,CAAAA,YAAT,MAAkC,IAAXC,CAAAA,QAAW,MAAXA,QAAW,CAC9B,GAAMC,CAAAA,IAAI,CAAGvB,WAAW,CAAC,SAAAwB,KAAK,QAAIA,CAAAA,KAAK,CAACX,QAAN,CAAeU,IAAnB,EAAN,CAAxB,CACA,GAAI,CAACZ,QAAQ,CAACY,IAAD,CAAb,CAAoB,mBAAO,4CAAP,CACpB,MAAOD,CAAAA,QAAP,CACH,CAED1B,QAAQ,CAAC6B,MAAT,cACI,oBAAC,QAAD,EAAU,KAAK,CAAEX,KAAjB,eACI,oBAAC,0BAAD,CAAgCK,QAAhC,cACI,oBAAC,YAAD,mBACA,oBAAC,GAAD,MADA,CADJ,CADJ,CADJ,CAQIO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARJ,EAWAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport rootReducer from \"./components/reducers/rootReducer\";\nimport {Provider, useSelector} from \"react-redux\";\nimport {applyMiddleware, createStore, compose} from \"redux\";\nimport * as serviceWorker from './serviceWorker';\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from \"redux-firestore\";\nimport {ReactReduxFirebaseProvider, getFirebase, isLoaded} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig)\n    )\n);\n\nconst config = {\n    userProfile: 'users', // where profiles are stored in database,\n    useFirestoreForProfile: true\n};\n\n\nconst rrfProps = {\n    firebase,\n    config,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n// const profileSpecificProps = {\n//     userProfile: 'users',\n//     useFirestoreForProfile: true,\n//     enableRedirectHandling: false,\n//     resetBeforeLogin: false\n// }\n//\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     config: profileSpecificProps,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance\n// };\n//\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance,\n//     userProfile: 'users',\n//     useFirestoreForProfile: true,\n//     presence: 'presence',\n//     sessions: 'sessions'\n// };\n\nfunction AuthIsLoaded({children}) {\n    const auth = useSelector(state => state.firebase.auth);\n    if (!isLoaded(auth))return <div>Loading...</div>;\n    return children;\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n            <App/>\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}